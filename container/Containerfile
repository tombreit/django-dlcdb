######################################################################
### STAGE NPM
FROM docker.io/library/node:18-bullseye-slim AS stagenpm

WORKDIR /stagenpm

COPY ./package-lock.json ./package.json ./
RUN npm install
COPY ./frontend ./frontend
RUN mkdir -p /stagenpm/dlcdb/static/dist
RUN npm run prod

######################################################################
### STAGE PYTHON
# Note: The base image for preparing the python virtual environment
# must be the same base image as the image that copies that venv.
FROM docker.io/library/debian:bullseye-slim AS stagepython

WORKDIR /stagepython

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install system packages required by Django app
RUN apt-get update --yes --quiet \
    && apt-get install --yes --quiet --no-install-recommends \
      python3 python3-venv python3-dev \
      libldap2-dev libsasl2-dev gcc \
      libmagic1 \
      make

# https://pythonspeed.com/articles/activate-virtualenv-dockerfile/
ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

RUN pip install --no-cache-dir --upgrade pip setuptools wheel
COPY requirements.txt /stagepython/
RUN pip install --no-cache-dir -r requirements.txt

# Generate Sphinx documentation
COPY . /stagepython
RUN make docs

######################################################################
### STAGE FINAL
FROM docker.io/library/debian:bullseye-slim AS finalstage

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PATH="/opt/venv/bin:$PATH"

WORKDIR /app

RUN apt-get update --yes --quiet \
    && apt-get install --yes --quiet --no-install-recommends \
      tree \
      bash \
      libmagic1 \
      # python3-minimal \
      python3 \
    && rm -rf /var/lib/apt/lists/*

COPY container/entrypoint.sh container/entrypoint.sh
COPY . /app/

# copy npm generated assets
COPY --from=stagenpm /stagenpm/dlcdb/static/dist /app/dlcdb/static/dist

# copy prepared venv
COPY --from=stagepython /opt/venv /opt/venv

#COPY --from=stagepython /stagepython/docs /app/docs

ENTRYPOINT ["container/entrypoint.sh"]

CMD [ "python3", "./manage.py", "runserver", "0.0.0.0:8000"]
