# Generated by Django 4.0 on 2022-01-05 00:23

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text
# import dlcdb.core.models.affiliation
import dlcdb.core.storage
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        # migrations.CreateModel(
        #     name='Affiliation',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('title', models.CharField(help_text='To which organizational unit this device belongs.', max_length=255, unique=True, verbose_name='Zuordnung')),
        #         ('abbreviation', models.CharField(help_text='Like "IT" or "VRL" etc.', max_length=3, unique=True, verbose_name='Abkürzung')),
        #     ],
        #     options={
        #         'verbose_name': 'Zuordnung',
        #         'verbose_name_plural': 'Zuordnungen',
        #         'ordering': [django.db.models.functions.text.Lower('title')],
        #     },
        # ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=255, verbose_name='Benutzername (denormalized)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Geändert')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='attachments/')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.customuser')),
            ],
            options={
                'verbose_name': 'Attachment',
                'verbose_name_plural': 'Attachments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=255, verbose_name='Benutzername (denormalized)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Geändert')),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('edv_id', models.CharField(blank=True, max_length=512, null=True, unique=True, verbose_name='EDV-Nummer')),
                ('sap_id', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='SAP-Nummer')),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Seriennummer')),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Hersteller')),
                ('series', models.CharField(blank=True, max_length=255, null=True, verbose_name='Modelbezeichnung')),
                ('is_licence', models.BooleanField(db_index=True, default=False, verbose_name='Ist Lizenz?')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Kaufdatum')),
                ('warranty_expiration_date', models.DateField(blank=True, null=True, verbose_name='Garantieablaufdatum')),
                ('maintenance_contract_expiration_date', models.DateField(blank=True, null=True, verbose_name='Ablaufdatum Lizenz- oder Wartungsvertrag')),
                ('cost_centre', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kostenstelle')),
                ('book_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Buchwert')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Notiz')),
                ('mac_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Haupt-Mac-Adresse')),
                ('extra_mac_addresses', models.TextField(blank=True, null=True, verbose_name='Weitere Mac-Adressen')),
                ('nick_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nickname / C-Name')),
                ('former_nick_names', models.CharField(blank=True, help_text='Komma-separierte Eingabe bitte', max_length=255, null=True, verbose_name='Vorherige Nicknames / C-Names')),
                ('is_legacy', models.BooleanField(default=False, verbose_name='Legacy-Device')),
                ('is_lentable', models.BooleanField(default=False, verbose_name='Verleihgerät')),
                ('is_deinventorized', models.BooleanField(default=False, verbose_name='Deinventarisiert')),
                ('has_malfunction', models.BooleanField(default=False, verbose_name='Gerät defekt')),
                ('is_imported', models.BooleanField(default=False, verbose_name='Via CSV-Import angelegt?')),
                ('qrcode', models.FileField(blank=True, null=True, storage=dlcdb.core.storage.OverwriteStorage(), upload_to='qrcode/')),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'ordering': ['-modified_at', 'edv_id'],
            },
        ),
        migrations.CreateModel(
            name='ImporterList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Valide Spaltenköpfe: <br>SAP_ID<br>ROOM<br>EDV_ID<br>DEVICE_TYPE<br>SERIAL_NUMBER<br>MANUFACTURER<br>SERIES<br>SUPPLIER<br>PURCHASE_DATE<br>WARRANTY_EXPIRATION_DATE<br>MAINTENANCE_CONTRACT_EXPIRATION_DATE<br>COST_CENTRE<br>BOOK_VALUE<br>NOTE<br>MAC_ADDRESS<br>EXTRA_MAC_ADDRESSES<br>NICK_NAME<br>IS_LENTABLE<br>USERNAME<br>AFFILIATION', upload_to='imported_csv', verbose_name='CSV-Datei')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Anmerkung')),
                ('messages', models.TextField(blank=True, editable=False, verbose_name='DLCDB-Ausgaben zu diesem Import')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Geändert')),
            ],
            options={
                'verbose_name': 'Import-Datei',
                'verbose_name_plural': 'Import-Dateien',
                'ordering': ['-modified_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_active', models.BooleanField(default=False, verbose_name='Aktiv')),
            ],
            options={
                'verbose_name': 'Inventur',
                'verbose_name_plural': 'Inventuren',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='Vorname')),
                ('last_name', models.CharField(max_length=255, verbose_name='Nachname')),
                ('email', models.EmailField(help_text='IMMER eine Email-Adresse angeben, da wir sonst die Ausleiher nicht anschreiben können.', max_length=254, unique=True)),
                ('department', models.CharField(choices=[('edv', 'EDV'), ('bib', 'Bibliothek'), ('vrw', 'Verwaltung'), ('str', 'Strafrecht'), ('krm', 'Kriminologie'), ('psl', 'Öffentliches Recht/Public Law'), ('htk', 'Haustechnik')], max_length=3)),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Personen',
                'ordering': ['last_name', 'first_name'],
                'unique_together': {('last_name', 'first_name')},
            },
        ),
        migrations.CreateModel(
            name='RemoverList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Valide Spaltenköpfe: <br>SAP_ID<br>EDV_ID<br>NOTE<br>DISPOSITION_STATE<br>REMOVED_INFO<br>REMOVED_DATE', upload_to='toremove_csv', verbose_name='CSV-Datei')),
                ('note', models.TextField(blank=True, verbose_name='Anmerkung')),
                ('messages', models.TextField(blank=True, editable=False, verbose_name='DLCDB-Ausgaben zu diesem Vorgang')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Geändert')),
            ],
            options={
                'verbose_name': 'Ausmusterungs-Datei',
                'verbose_name_plural': 'Ausmusterungs-Dateien',
                'ordering': ['-modified_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SapList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='sap_csv', verbose_name='CSV-Datei')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellungsdatum')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Anmerkung')),
            ],
            options={
                'verbose_name': 'SAP-Liste',
                'verbose_name_plural': 'SAP-Listen',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Zulieferer',
                'verbose_name_plural': 'Zulieferer',
                'ordering': [django.db.models.functions.text.Upper('name')],
            },
        ),
        migrations.CreateModel(
            name='SapListComparisonResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sap_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.saplist')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=255, verbose_name='Benutzername (denormalized)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Geändert')),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('number', models.CharField(max_length=30, unique=True)),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Kurzbeschreibung')),
                ('is_auto_return_room', models.BooleanField(default=False, help_text='Zurückgebene Leihgeräte werden automatisch diesem Raum zugeordnet', verbose_name='"Auto return" Raum')),
                ('is_external', models.BooleanField(default=False, help_text='Location/Raum, in dem Assets gesammelt werden, die außer Haus sind, z.B. verliehen.', verbose_name='Extern/Verliehen-Raum')),
                ('qrcode', models.FileField(blank=True, null=True, storage=dlcdb.core.storage.OverwriteStorage(), upload_to='qrcode/')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='accounts.customuser')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.customuser')),
            ],
            options={
                'verbose_name': 'Raum',
                'verbose_name_plural': 'Räume',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=255, verbose_name='Benutzername (denormalized)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Geändert')),
                ('is_active', models.BooleanField(db_index=True, default=False, verbose_name='Aktiv')),
                ('record_type', models.CharField(choices=[('ORDERED', 'BESTELLT'), ('INROOM', 'LOKALISIERT'), ('LENT', 'VERLIEHEN'), ('LOST', 'NICHT AUFFINDBAR'), ('REMOVED', 'ENTFERNT')], db_index=True, max_length=20, verbose_name='Record Typ')),
                ('note', models.TextField(blank=True, verbose_name='Bemerkung (Record)')),
                ('lent_start_date', models.DateField(blank=True, null=True, verbose_name='Verleihbeginn')),
                ('lent_desired_end_date', models.DateField(blank=True, null=True, verbose_name='Soll-Rückgabedatum')),
                ('lent_end_date', models.DateField(blank=True, help_text='Mit dem Setzen ist der Verleih abgeschlossen', null=True, verbose_name='Zurückgegeben am')),
                ('lent_note', models.TextField(blank=True, verbose_name='Interne Bemerkung (Ausleihe)')),
                ('lent_reason', models.TextField(blank=True, verbose_name='Ausleihgrund')),
                ('lent_accessories', models.TextField(blank=True, verbose_name='Zubehör')),
                ('date_of_purchase', models.DateField(blank=True, null=True, verbose_name='Bestelldatum')),
                ('disposition_state', models.CharField(blank=True, choices=[('SLD', 'verkauft'), ('SCR', 'verschrottet'), ('SRD', 'abgegeben'), ('DPL', 'Duplikat')], max_length=3, verbose_name='Verbleib nach der Ausmusterung')),
                ('removed_info', models.TextField(blank=True, null=True, verbose_name='Verbleib (removed_info)')),
                ('removed_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Entfernt am')),
                ('assigned_device', models.ForeignKey(blank=True, limit_choices_to={'is_licence': False}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_device', to='core.device', verbose_name='Zugeordnetes Device')),
                ('attachments', models.ManyToManyField(blank=True, to='core.Attachment')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.device', verbose_name='Device')),
                ('inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory', verbose_name='Inventur')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.person', verbose_name='Person')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.room', verbose_name='Raum')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.customuser')),
            ],
            options={
                'verbose_name': 'Record',
                'verbose_name_plural': 'Records',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField()),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_notes', to='core.device')),
                ('inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.inventory', verbose_name='Inventurzuordnung')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='room_notes', to='core.room')),
            ],
            options={
                'verbose_name': 'Notiz',
                'verbose_name_plural': 'Notizen',
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=255, verbose_name='Benutzername (denormalized)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Geändert')),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('prefix', models.CharField(blank=True, max_length=255, null=True, verbose_name='Präfix')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='accounts.customuser')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.customuser')),
            ],
            options={
                'verbose_name': 'Gerätetyp',
                'verbose_name_plural': 'Gerätetypen',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='device',
            name='active_record',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='active_device_record', to='core.record'),
        ),
        # migrations.AddField(
        #     model_name='device',
        #     name='affiliation',
        #     field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.affiliation', verbose_name='Zuordnung'),
        # ),
        migrations.AddField(
            model_name='device',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='accounts.customuser'),
        ),
        migrations.AddField(
            model_name='device',
            name='device_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.devicetype', verbose_name='Geräte-Typ'),
        ),
        migrations.AddField(
            model_name='device',
            name='imported_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.importerlist', verbose_name='Importiert via'),
        ),
        migrations.AddField(
            model_name='device',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.supplier', verbose_name='Zulieferer'),
        ),
        migrations.AddField(
            model_name='device',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.customuser'),
        ),
        migrations.CreateModel(
            name='DialogDevice',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.device',),
        ),
        migrations.CreateModel(
            name='InRoomRecord',
            fields=[
            ],
            options={
                'verbose_name': 'Raumzuweisung',
                'verbose_name_plural': 'Raumzuweisungen',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.record',),
        ),
        migrations.CreateModel(
            name='InventoryRoom',
            fields=[
            ],
            options={
                'verbose_name': 'Inventur-Raum',
                'verbose_name_plural': 'Inventur-Räume',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.room',),
        ),
        migrations.CreateModel(
            name='LentRecord',
            fields=[
            ],
            options={
                'verbose_name': 'Ausleih-Record',
                'verbose_name_plural': 'Ausleih-Records',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.record',),
        ),
        migrations.CreateModel(
            name='LicenceRecord',
            fields=[
            ],
            options={
                'verbose_name': 'Lizenz',
                'verbose_name_plural': 'Lizenzen',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.record',),
        ),
        migrations.CreateModel(
            name='LostRecord',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.record',),
        ),
        migrations.CreateModel(
            name='OrderedRecord',
            fields=[
            ],
            options={
                'verbose_name': 'Bestellung',
                'verbose_name_plural': 'Bestellungen',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.record',),
        ),
        migrations.CreateModel(
            name='RemovedRecord',
            fields=[
            ],
            options={
                'verbose_name': 'Entfernt-Record',
                'verbose_name_plural': 'Entfernt-Records',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.record',),
        ),
        migrations.AddConstraint(
            model_name='record',
            constraint=models.CheckConstraint(condition=models.Q(('lent_desired_end_date__lte', datetime.datetime(2099, 12, 31, 0, 0))), name='core_record_valid_lent_desired_end_date'),
        ),
    ]
